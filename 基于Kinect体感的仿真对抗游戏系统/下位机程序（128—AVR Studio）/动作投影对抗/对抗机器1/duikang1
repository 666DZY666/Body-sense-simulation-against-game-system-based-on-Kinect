#include<avr/io.h>
#include<avr/iom128.h>
#include<util/delay.h>
#include<avr/interrupt.h>
#include "servo.h"
#include "system_init.h"              //定义与系统初始化有关函数
void   rightinit(void);
void   leftinit(void);
void   leftrightinit(void);
void   rightping(void);
void   leftping(void); 
void  leftrightping(void);
void  leftgao(void); 
void  rightgao(void); 
void  leftrightgao(void);
void  leftxia(void);
void  rightxia(void);
void  zuorightxia(void);
int Duosu = 500;

  
int main(void)
{   


    PWM_init(); 
	System_Init();
    
	DDRA=0XFF;
	DDRC=0XF0;
	//PORTC = 0XFF;
	unsigned char i,m;
	int l=200,r=200,a=100,b=100;
	cli();                        //关总中断
	for(m=1;m<=6;m++)                       //我们用8个舵机，ID:1-8
        SetServoLimit(m,0,1023);           //设置舵机工作模式为舵机模式
         _delay_ms(1000);
		 leftrightinit();
		 _delay_ms(1000);

         while(1)
	{   //move(100,100);   _delay_ms(1000);move(0,0);break;
        //move(l,r);_delay_ms(50);
		//move(0,0);_delay_ms(5);
		i=USART1_recieve();
		switch(i)
		{     
		//	case '0': move(l,r);   _delay_ms(70);move(0,0);break;
		//	case '1': move(-l,-r); _delay_ms(70);move(0,0);break;
		//	case '2': move(-l,r); _delay_ms(60);move(0,0);break;
		//	case '3': move(l,-r); _delay_ms(60);move(0,0);break;//move(0,0);
		//	case 'z': move(a,b); _delay_ms(1000);move(0,0);break;
			case '0': move(70,70);   _delay_ms(70);move(0,0);break;
			case '1': move(-70,-70); _delay_ms(70);move(0,0);break;
			case '2': move(-100,100); _delay_ms(60);move(0,0);break;
			case '3': move(100,-100); _delay_ms(60);move(0,0);break;//move(0,0);
			case '4': move(180,180); _delay_ms(70);move(0,0);break;//move(0,0);
			case 'p': move(-170,-170); _delay_ms(70);move(0,0);break;
			case 's': move(-270,-270); _delay_ms(60);move(0,0);break;//move(0,0);
            case 't': move(270,270); _delay_ms(60);move(0,0);break;
			//case '6': move(200,-200);   _delay_ms(400);move(0,0);break;
			//case '5': rightgao();  break; //右手半上举	//	SetServoPosition(4,536,300);
		    //case '6': rightxia();  break;//右手半下举
	    	//case '7': rightping(); break;//右手平举动作
		    case '9':
	    
			 rightinit(); break; //右手初始化
	    	//	case 'h': leftping();  break;//左手平举动作
	    	//   case 'f': leftgao();   break; //左手半上举
	    	//	case 'g': leftxia();   break;//左手半下举
			case 'i':  
			
			leftinit();  
			_delay_ms(700); break;//左手初始化
		    //case 'e':  PORTC &= 0XDF; _delay_ms(1000); PORTC |= 0X20; break;//武术语音   
	    	//case 'r': PORTC &= 0XEF; _delay_ms(1000); PORTC |= 0X10;break;//结束语音rightHand.Y < kneeRight.Y
	    	//case 'c': PORTC &= 0X7F;_delay_ms(1000);PORTC |= 0X80;break;//开始语音leftHand.Y < kneeLeft.Y
	    	case '5':   
			    
				rightgao();break; //右手高举
			case 'j':
			    
				rightping(); break;  //右手前伸
		//	case 'k':break;  //右手半前伸
			case 'e':
		    	
    			leftgao();break;  //左手高举
			case 'm':
		    
			leftping(); break;//左手前伸
		//	case 'o':break;  //左手半拥抱
		//	case '5': break; //  抱球=kinect右手高举动作
			default : break;
		}
		
		USART1_send(i);  
	}	
}
void   rightinit()                      //右手初始化     
      { 
	
		 SetServoPosition(1,621,Duosu);
		 SetServoPosition(2,531,Duosu);
		 SetServoPosition(3,579,Duosu);
		// SetServoPosition(4,512,300);
		}
	
void   leftinit()                      //左手初始化     
      {
		
		 SetServoPosition(4,397,Duosu);
		 SetServoPosition(5,542,Duosu);
		 SetServoPosition(6,790,Duosu);
		 //SetServoPosition(8,512,300);
		
	  }
void   leftrightinit()                      //左右手初始化     
      {
		 
		 SetServoPosition(1,621,Duosu);
		 SetServoPosition(2,531,Duosu);
		 SetServoPosition(3,579,Duosu);
		  SetServoPosition(4,397,Duosu);
		 SetServoPosition(5,542,Duosu);
		 SetServoPosition(6,790,Duosu);
		 //SetServoPosition(7,512,300);
		 //SetServoPosition(8,512,300);
	
	  }
void  rightping()    //右手平举
     {
	    SetServoPosition(1,852,Duosu);
		SetServoPosition(2,531,Duosu);
		SetServoPosition(3,579,Duosu);
		//SetServoPosition(4,563,400);
     
	 }
 void  leftping()    //左手平举
     {
	   
	    SetServoPosition(4,189,Duosu);
		SetServoPosition(5,542,Duosu);
		SetServoPosition(6,790,Duosu);
	   // SetServoPosition(8,492,400);//左手平举
		
	 }
 void  leftrightping()    //左右手平举
     {
	   
		SetServoPosition(1,852,Duosu);
		SetServoPosition(2,531,Duosu);
		SetServoPosition(3,579,Duosu);
		 SetServoPosition(4,189,Duosu);
		SetServoPosition(5,542,Duosu);
		SetServoPosition(6,790,Duosu);
		//SetServoPosition(7,427,400);
		//SetServoPosition(8,492,400);
     	
	 }
void  leftgao()    //左手高举
     {
	   
		SetServoPosition(4,87,Duosu);
	    SetServoPosition(5,541,Duosu);
		SetServoPosition(6,790,Duosu);
		//SetServoPosition(8,492,400);
	
	 }
void  rightgao()    //右手高举
     {
	     SetServoPosition(1,949,Duosu);
		 SetServoPosition(2,531,Duosu);
	     SetServoPosition(3,579,Duosu);
		 //SetServoPosition(4,532,300);
     
	 }
void  leftrightgao()    //左右手高举
     {
	     SetServoPosition(1,949,Duosu);
		 SetServoPosition(2,531,Duosu);
	     SetServoPosition(3,579,Duosu);
		 SetServoPosition(4,87,Duosu);
	    SetServoPosition(5,541,Duosu);
		SetServoPosition(6,790,Duosu);
		 //SetServoPosition(7,721,300);
		 //SetServoPosition(8,492,300);
     
	 }
void  leftxia()    //左手下举
     {
	   
		Action_write(5,725,300);
		Action_write(6,226,300);
		Action_write(7,695,300);
		Action_write(8,492,300);
		Action();
	    _delay_ms(700);
	 }
void  rightxia()    //右手下举
     {
	    Action_write(1,346,300);
		Action_write(2,639,300);
		Action_write(3,290,300);
		Action_write(4,532,300);
     	Action();
	    _delay_ms(700);
	 }
/*void  zuorightxia()    //左右手下举
     {
	    Action_write(1,346,300);
		Action_write(2,639,300);
		Action_write(3,290,300);
		Action_write(4,532,300);
		Action_write(5,725,300);
		Action_write(6,226,300);
		Action_write(7,695,300);
		Action_write(8,492,300);
     	Action();
	    _delay_ms(700);
	 }

  */ 
//SetServoPosition(1,972,300);
// SetServoPosition(2,551,300);
//SetServoPosition(3,632,300);
//SetServoPosition(4,543,300);
